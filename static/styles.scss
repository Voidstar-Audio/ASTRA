@use "sass:map";
@use "theme";
@use "utils";

:root {
    color: theme.$gray-950;
    background-color: theme.$gray-100;
}

* {
    font-family: theme.$font;
    font-size: map.get(theme.$font-sizes, "md");
    border-color: theme.$gray-950;
}

button:focus-visible,
dropdown .title:focus-visible,
switch:focus-visible .switch-handle-bg,
checkbox:focus-visible,
radiobutton:focus-visible,
paramslider:focus-visible .track {
    z-index: 9001;
    box-shadow:
        0px 0px 0px 1.5px theme.$gray-50,
        0px 0px 0px 3px theme.$gray-950;
}

button {
    height: theme.$component-size;
    background-color: theme.$gray-50;
    border-width: 1px;
    child-space: 0px;

    &:active {
        background-color: theme.$gray-100;
    }

    &.on {
        background-color: theme.$gray-200;
    }

    &.primary {
        background-color: theme.$gray-950;
        color: theme.$gray-50;

        &:active {
            background-color: theme.$gray-700;
        }
    }

    &.destructive {
        background-color: map.get(theme.$colors, "red");
        color: theme.$gray-50;
        border-color: map.get(theme.$colors, "red");

        &:active {
            background-color: darken(map.get(theme.$colors, "red"), 10%);
        }
    }

    & > .inner {
        min-left: 4px;
        min-right: 4px;
        top: 1s;
        bottom: 1s;
    }

    &.large {
        height: 18px;

        & > .inner {
            min-left: 6px;
            min-right: 6px;
        }
    }
}

dropdown {
    height: theme.$component-size;

    width: auto;
    alignment: center;

    .title {
        width: auto;
        alignment: center;
        height: theme.$component-size;
        border-width: 1px;
        child-left: 4px;
        child-right: 4px;
        background-color: theme.$gray-50;
        &:active {
            background-color: theme.$gray-100;
        }
        &.on {
            background-color: theme.$gray-200;
        }
    }

    popup label.option,
    popup label.value {
        width: 1s;
        child-left: 4px;
        background-color: theme.$gray-50;
        &:hover {
            background-color: theme.$gray-100;
        }
        &:active {
            background-color: theme.$gray-200;
        }
        &.selected {
            background-color: theme.$gray-200;
        }
    }
}

paramdropdown {
    dropdown {
        width: 100%;
    }
    height: theme.$component-size;
}

button.ghost,
dropdown.ghost .title {
    background-color: transparent;
    border-color: transparent;
    &:hover {
        background-color: theme.$gray-50;
        border-color: theme.$gray-950;
    }
    &:active {
        background-color: theme.$gray-100;
    }
    &.on {
        background-color: theme.$gray-200;
    }
}

popup {
    border-width: 1px;
    background-color: theme.$gray-100;
    box-shadow: 2px 2px 0px 0px theme.$gray-950;
}

textbox {
    child-left: 4px;
    child-right: 4px;
    font-family: theme.$font;
    height: theme.$component-size;
    background-color: theme.$gray-50;
    box-shadow: 0px -1px 0px 0px theme.$gray-950 inset;
}

paramslider {
    height: auto;

    .title {
        height: 10px;
        child-top: -3px;

        .name {
            width: 1s;
        }

        .value {
            width: auto;
        }
    }

    .value {
        color: theme.$gray-700;
    }

    .track {
        height: theme.$component-size;
        border-width: 1px;
        child-left: -0.5px;
        child-right: -0.5px;
        background-color: theme.$gray-50;

        .slider {
            background-color: theme.$gray-300;
        }

        .head {
            background-color: theme.$gray-950;
        }
    }

    .ticks {
        right: 1px;
        height: 12px;

        .tick {
            height: 4px;
            width: 1px;
            background-color: theme.$gray-950;

            &.short {
                height: 3px;
            }
        }

        .tick-label {
            height: 6px;
            font-size: map.get(theme.$font-sizes, "sm");
        }
    }

    &:focus-visible .tick {
        transform: translateY(2px);
    }
}

switch {
    height: theme.$component-size;
    width: theme.$component-size * 2;

    $transition-duration: 150ms;
    $transition-timing: cubic-bezier(0.25, 1, 0.5, 1);

    .switch-handle-bg {
        border-width: 1px;
        height: theme.$component-size;
        width: theme.$component-size * 2;
    }

    .switch-handle {
        size: theme.$component-size - 4px;
        left: 2px;
        top: 2px;
        transition: left $transition-duration $transition-timing;
    }

    &:checked .switch-handle {
        left: 16px;
        transition: left $transition-duration $transition-timing;
    }

    .switch-handle-bg {
        background-color: theme.$gray-50;
    }

    &:checked .switch-handle-bg {
        background-color: theme.$gray-950;
    }

    &:active .switch-handle-bg {
        background-color: theme.$gray-100;
    }

    &:checked:active .switch-handle-bg {
        background-color: theme.$gray-700;
    }

    .switch-handle {
        background-color: theme.$gray-950;
    }

    &:checked .switch-handle {
        background-color: theme.$gray-50;
    }
}

switch.disabled,
.disabled switch {
    pointer-events: none;

    * {
        border-color: theme.$gray-600;
    }

    .switch-handle-bg,
    &:checked .switch-handle-bg {
        background-color: theme.$gray-100;
    }

    .switch-handle,
    &:checked .switch-handle {
        background-color: theme.$gray-600;
    }
}

paramswitch {
    height: theme.$component-size;
    width: theme.$component-size * 2;
    .value {
        color: theme.$gray-700;
    }

    .track {
        background-color: theme.$gray-50;

        .slider {
            background-color: theme.$gray-300;
        }

        .head {
            background-color: theme.$gray-950;
        }
    }

    .ticks .tick {
        background-color: theme.$gray-950;
    }
}

checkbox {
    border-width: 1px;
    size: theme.$component-size;
    background-color: theme.$gray-50;

    &:active {
        background-color: theme.$gray-100;
    }
}

radiobutton {
    size: theme.$component-size;
    border-width: 1px;
    border-radius: 50%;
    color: theme.$gray-950;
    background-color: theme.$gray-50;

    &:active {
        background-color: theme.$gray-100;
    }

    .inner {
        background-color: theme.$gray-950;
        width: 0px;
        height: 0px;
        border-radius: 50%;
    }

    &:checked .inner {
        background-color: theme.$gray-950;
        width: theme.$component-size - 6px;
        height: theme.$component-size - 6px;
    }
}

selector {
    height: theme.$component-size;
    border-width: 1px;
    width: auto;

    hstack {
        width: auto;

        button {
            border-width: 0px;
            height: 1s;
            width: auto;
        }
    }
}

scrollview {
    & > scrollbar {
        display: none;
    }

    &:checked > scrollbar {
        display: flex;
    }

    scrollbar {
        background-color: transparent;
    }

    scrollbar.horizontal {
        height: 8px;
    }

    scrollbar.vertical {
        width: 8px;
    }

    scrollbar .thumb {
        opacity: 0;
        transition: opacity 200ms 200ms linear;
    }

    scrollbar.horizontal .thumb {
        height: 1s;
    }

    scrollbar.vertical .thumb {
        width: 1s;
    }

    &:checked > scrollbar:over .thumb {
        opacity: 1;
        transition: opacity 20ms;
    }

    &:checked:active scrollbar .thumb {
        opacity: 1;
        transition: opacity 0ms;
    }

    &:checked > scrollbar:active .thumb {
        opacity: 1;
        transition: opacity 0ms;
    }
}

tag {
    background-color: theme.$gray-200;
    height: theme.$component-size;
    child-left: 6px;
    child-right: 6px;
    border-radius: 50%;
    width: auto;
    alignment: center;

    & > * {
        width: auto;
        alignment: center;
    }

    &.primary {
        background-color: theme.$gray-950;
        color: theme.$gray-50;
    }
}

image {
    background-size: cover;
}

.divider {
    background-color: theme.$gray-950;

    &.horizontal {
        height: 1px;
        width: 1s;
    }

    &.vertical {
        height: 1s;
        width: 1px;
    }
}

oscilloscope {
    color: theme.$gray-500;

    &.overlay {
        opacity: 0.33;
    }
}

grid {
    color: theme.$gray-950;
    opacity: 0.05;
}

unit-ruler label {
    font-size: map.get(theme.$font-sizes, "sm");
}

scrollbar .thumb {
    background-color: theme.$gray-300;
}
